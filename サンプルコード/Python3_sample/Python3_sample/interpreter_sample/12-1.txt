P275●Carクラスを定義するclass Car:    pass    # 何もしない●Carクラスのインスタンスを2個作るcar1 = Car()car2 = Car()P277●Carクラスのインスタンスを作るfrom car_class1 import Carcar1 = Car()car2 = Car("red")P278●Car()で作ったcar1のインスタンス変数の値car1.color    # 初期値の"white"が設定されているcar1.mileage●Car("red")で作ったcar2のインスタンス変数の値car2.color     # 引数で指定した"red"が設定されているcar2.mileageP279●インスタンス変数colorの値を更新するcar1.color    # colorには"white"が設定されているcar1.color = "green"    # "green"に設定し直すcar1.colorP280●インスタンス変数mileageの値を更新するcar1.mileage    # mileageの現在の値は45car1.mileage = 100    # 100に設定するcar1.mileageP283●クラス変数の値を確認するfrom car_class3 import CarCar.makerCar.countP286●Simpleクラスに動的にクラス変数xを追加するclass Simple :    # Simpleクラス定義    passSimple.x = 100    # クラス変数xを追加するSimple.x * 2●Simpleクラスに動的にクラスメソッドgreetingを追加するdef hello(msg = "ハロー"):    # hello()メソッド定義    print(msg)Simple.greeting = hello    # greetingクラスメソッドを追加するSimple.greeting("おはよう！")    # 実行するP287●動的にインスタンス変数を追加するobj = Simple()obj.a = 123obj.a●動的にインスタンスメソッドを追加するobj1 = Simple()obj2 = Simple()def drum(beat = "トコトコ"):    print(beat)def sax(phrase = "プープー"):    print(phrase)obj1.play = drumobj2.play = sax●追加したインスタンスメソッドを実行するobj1.play("ドンドコ")obj1.play()obj2.play()●追加したメンバーを削除するobj1.a = Noneobj1.play = Nonedel Simple.x