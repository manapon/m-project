P372●0～9の配列を作るimport numpy as npnp.arange(10)●n×mの配列を作るn = 3  # n行m = 4  # m列np.arange(n*m).reshape(n, m)●10以上、20未満の偶数の配列np.arange(10, 20, 2)P373●行列A、Bの要素が同じかどうかを比較するA = np.array([1, 2, 3, 4, 5, 6]).reshape(2, 3)B = np.array([1, 2, 9, 4, 8, 6]).reshape(2, 3)print(A)print(B)C = (A == B)    # AとBを比較した結果の配列Cを作りますprint(C)●行列A、Bを比較して要素が異なる個数を数えるA = np.array([1, 2, 3, 4, 5, 6]).reshape(2, 3)B = np.array([1, 2, 9, 4, 8, 6]).reshape(2, 3)n = (A != B).sum()    # 要素が異なる数を数えるprint(n)●開始値は省略し、0.5刻みのステップを指定するnp.arange(10, step = 0.5)P374●0〜120を16分割した配列を作るnp.linspace(0, 120, 16)●3行4列のゼロ行列を作るZERO = np.empty((3,4), dtype=None)ZEROP375●4行4列の単位行列を作るE = np.identity(4)print(E)●eye()を使って単位行列を作るE = np.eye(3)print(E)●整数値の単位行列を作るE = np.identity(3, dtype=int)print(E)●0が10個埋まった配列を作るZERO = np.zeros(9, dtype=int)ZERO●1が10個埋まった配列を作るONE = np.ones(10)ONEP376●すべてが整数1の2行３列の配列を作るONE = np.ones((2, 3), dtype=int)ONE●要素を３回ずつ繰り返した配列を作るdata = np.array([1, 2, 3])data.repeat(3)●各行の値が同じ配列を作るdata = np.array([1, 2, 3])data.repeat(3).reshape(3, 3)●繰り返す方向を指定した例data = np.arange(6).reshape(2, 3)datadata.repeat(2, axis=0)  # 行を2回繰り返すdata.repeat(2, axis=1)  # 列を2回繰り返すP377●正規分布の乱数sigma = 2.5  # 分散mu = 50    # 平均data = sigma * np.random.randn(2, 3) + mudataP378●二項分布の乱数np.random.binomial(n=100, p=0.1, size=(2, 3))●ポアソン分布の乱数np.random.poisson(lam=10, size=(10))P379●同じランダムシードで同じ乱数を作るnp.random.seed(10)  # ランダムシードを設定するnp.random.randn(3)  # 乱数を発生np.random.seed(10)  # 同じランダムシードを設定するnp.random.randn(3)  # 同じ乱数が作られる●配列の要素の並びをシャッフルするdata = np.arange(9).reshape(3, 3)np.random.shuffle(data)dataP380●data.csvを読み込んで配列を作るimport numpy as npdata = np.loadtxt("data.csv", delimiter=",", skiprows=1)data●pandasモジュールを使ってCSVファイルを読み込むimport pandas as pddf = pd.read_csv("data.csv")    # CSVファイルを読み込むheader = df.columns.valuesdata = df.valuesheaderdata