P159●リストとリストを連結するabc = ["a", "b", "c"]xyz = ["x", "y", "z"]az = abc + xyzaz●リストにリストの値を追加するcolors = []colors += ["red"]colors += ["white", "black"]colors●extend()を使ってリストを連結するdata = [1, 3, 5]newdata = [2, 4, 6]data.extend(newdata)dataP160●append()はリストを１個の要素として追加するdata = [1, 3, 5]newdata = [2, 4, 6]data.append(newdata)data●リストをスライスするcolors = ["blue", "red", "green", "yellow", "pink", "black", "white"]colors[:]colors[3:]colors[:3]colors[3:6]P161●スライスの位置を後ろから指定するcolors[-1:]colors[-2:]colors[-2:-1]colors[:-1]●リストdataをスライスしてdata1とdata2に分割するdata = [10, 21, 35, 49, 51, 60, 77, 81, 92, 100]n = 3    # 分割する位置data1 = data[:n]    # 最初からn-1までdata2 = data[n:]    # nから最後までdata1P162●要素を１個飛ばしで取り出すletters = ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j"]letters[::2]letters[1::2]●先に範囲でスライスする場合と先にステップでスライスする場合の違いletters[1:5][::2] # 先に範囲でスライスするletters[::2][1:5] # 先にステップでスライスするletters[1:5:2] # 範囲とステップを同時に指定する●後ろから順に取り出すletters = ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j"]letters[::-1]letters[::-2]letters[:-1][::-2]P163●３つのリストcolors_a = ["green", "bule", "red"]colors_b = ["green", "bule", "red"]colors_c = ["green", "red", "blue"]●リストを比較するcolors_a == colors_bcolors_a == colors_c●colors_aを変更してもcolors_bは変化しないcolors_a.append("white")  # 要素を追加するcolors_acolors_b●colors_aを代入して作ったcolors_bcolors_a = ["green", "bule", "red"]colors_d = colors_a  # 代入するcolors_dcolors_a == colors_dP164●colors_aを変更するとcolors_dも同じ値になるcolors_a.append("white")  # 要素を追加するcolors_acolors_d●リストが同一オブジェクトかどうか比較するlist_a = [1, 2, 3]list_b = list_a  # list_bにlist_aを代入するlist_c = [1, 2, 3]list_a is list_blist_a is list_clist_a is not list_c●list_aを変更するとlist_bが同じ値になるlist_a[0] = 99list_alist_bP165●list_bを変更するとlist_aが同じ値になるlist_b[1] = 100list_blist_a●同じリストを参照している変数に別のリストを代入すると参照が切れるlist1 = [10, 20, 30]list2 = list1list1 = [11, 22, 33]    # list1に別のリストを代入するlist2P166●数値が入った変数を代入しても参照が渡されるnum_a = 10num_b = num_anum_bnum_a is num_b●文字列で試した場合str_a = "こんにちは"str_b = str_astr_bstr_a is str_bP167●copy()でリストlist_motherを複製するlist_mother = [10, 20, 30, 40, 50]list_work = list_mother.copy()  # リストを複製するlist_worklist_work is list_mother●list_workの値を変更してもlist_motherは元のままlist_work[0] = 99list_worklist_mother●スライスを利用してリストlist_motherを複製するlist_mother = [10, 20, 30, 40, 50]list_work = list_mother[:]    # リストを複製するlist_worklist_work is list_mother●list()でリストlist_motherを複製するlist_mother = [10, 20, 30, 40, 50]list_work = list(list_mother)    # リストを複製するlist_worklist_work is list_mother