P256●hello()を変数msgに代入して実行するdef hello() :    print("ハロー")msg = hello    # 関数を代入するmsg()    # 変数msgに入っている関数を実行するP259●def文を使ってarea(w, h)を定義した場合def area(w, h):    return w * hnum =  area(3, 4)num●lambdaを使ってarea(w, h)と同じ機能の関数オブジェクトを作るfunc = lambda w, h : w * hnum = func(3, 4)numP260●ラムダ式を直接実行するnum = (lambda w, h: w * h)(3, 4)num●ラムダ式で引数に初期値を設定するprice = lambda burger=1, potato=0 : burger*240 + potato*100price(potato = 2)P261●sort()の比較関数をラムダ式で書くsizelist = ["XS", "S", "M", "L"] data = ["S", "M", "XS", "L", "M", "M", "XS", "S", "M", "L", "M"]data.sort(key = lambda item : sizelist.index(item))dataP262●map()の関数にラムダ式を使うnums = [4, 3, 7, 6, 2, 1]nums2 = list(map(lambda x : x * 2, nums))nums2●map()を使わずにリスト内包表記で書いた場合nums = [4, 3, 7, 6, 2, 1]nums2 = [num * 2 for num in nums]nums2●filter()を使って正の値だけを抜き出したリストを作るnums = [4, -3, 9, 1, -2, -4, 5]nums2 = list(filter(lambda x : x>0, nums))nums2●リスト内包表記を使った場合nums = [4, -3, 9, 1, -2, -4, 5]nums2 = [num for num in nums if num>0]nums2